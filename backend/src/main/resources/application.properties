spring.application.name=backend

# Specifies the location of additional configuration properties
spring.config.import=optional:file:.env[.properties]
spring.profiles.active=${SPRING_PROFILES_ACTIVE}

# Specifies the URL of the database, including host, port, and database name. 
# The `createDatabaseIfNotExist=true` ensures the database is created if it doesn't already exist.
spring.datasource.url=${SPRING_DATASOURCE_URL}

# The username used to connect to the database.
spring.datasource.username=${DB_USER}

# The password used to connect to the database.
spring.datasource.password=${DB_PASSWORD}

# Configures Hibernate to automatically update the database schema to match the entity mappings.
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}

# Enables logging of SQL statements executed by Hibernate
spring.jpa.show-sql=true

# Formats the SQL statements in the logs for better readability
spring.jpa.properties.hibernate.format_sql=true

# Configuration for SQL script execution
# Specifies the path to the SQL script for data insertion
spring.sql.init.data-locations=classpath:data.sql

# Sets the mode for SQL script execution (always, embedded, never)
spring.sql.init.mode=always

# Continue even if there are errors in SQL scripts (useful for INSERT OR IGNORE scenarios)
spring.sql.init.continue-on-error=true

# Execute the SQL scripts after JPA entities are created
spring.jpa.defer-datasource-initialization=true

# Specifies the secret key used for signing and verifying JWT tokens.
# The value is expected to be provided as an environment variable (JWT_SECRET_KEY).
security.jwt.secret-key=${JWT_SECRET_KEY}

# 1h in millisecond
security.jwt.expiration-time=${JWT_EXPIRATION_TIME}

# Json docs path OpenAPI
springdoc.api-docs.path=/docs

# Swagger UI path OpenAPI
springdoc.swagger-ui.path=/docs/swagger.html

# Enable/Disable api docs
springdoc.api-docs.enabled=true

# Enable/Disable the swagger-ui
springdoc.swagger-ui.enabled=true

# Allowed hosts
cors.allowed-origin=${CORS_ALLOWED_ORIGIN}